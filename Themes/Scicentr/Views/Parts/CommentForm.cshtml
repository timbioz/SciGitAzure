@using Orchard.Comments;
@using Orchard.Comments.Models
@using Orchard.Comments.Settings
@using Orchard.Utility.Extensions;

@{
    CommentsPart commentsPart = Model.ContentPart;
    var settings = commentsPart.TypePartDefinition.Settings.GetModel<CommentsPartSettings>();
}

@if (!Model.ContentPart.CommentsActive) {
    if (Model.ContentPart.Comments.Count > 0) {
    <div id="comments">
        <p class="comment-disabled">@T("Комментарии были отключены для данной публикации")</p>
    </div>
    }
}
else if (settings.MustBeAuthenticated && WorkContext.CurrentUser == null) {
    <div id="comments">
        <p class="comment-disabled">@T("Вы должны зарегистрироваться для того чтобы оставлять комментарии")</p>
    </div>
}
else if (WorkContext.CurrentUser == null && !AuthorizedFor(Permissions.AddComment)) {
    <div class="clear"></div>
    <h5 id="add-comment">@T("Оставить комментарий")</h5>
    <p class="info message">@T("Вы должны {0} для комментирования.", Html.ActionLink(T("Войти").ToString(), "LogOn",
                            new { Controller = "Account", Area = "Orchard.Users", ReturnUrl = string.Format("{0}#addacomment", Context.Request.RawUrl) }))</p>
}
else {
    @Html.ValidationSummary() 
    <span id="comment-form-beacon" />
    using (Html.BeginFormAntiForgeryPost(Url.Action("Create", "Comment", new { Area = "Orchard.Comments", ReturnUrl = Context.Request.ToUrlString() }), FormMethod.Post, new { @class = "comment-form" })) {
        if (TempData.ContainsKey("Comments.InvalidCommentEditorShape")) {
            @Display(TempData["Comments.InvalidCommentEditorShape"]);
        }
        else {
            @Display(Model.EditorShape)
        }
    <button class="primaryAction button btn color" type="submit">@T("Добавить комментарий")</button>
    }

}